// <auto-generated />
using System;
using CondominiumNetwork.Infrastructure.DataAcess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CondominiumNetwork.Infrastructure.DataAcess.Migrations
{
    [DbContext(typeof(CondominiumNetworkContext))]
    [Migration("20190620215240_AlterOcurrence")]
    partial class AlterOcurrence
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("OcurrenceId");

                    b.Property<Guid>("ProfileId");

                    b.Property<DateTime>("PublishDateTime");

                    b.HasKey("Id");

                    b.HasIndex("OcurrenceId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Ocurrence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(600)");

                    b.Property<Guid>("ProfileId");

                    b.Property<DateTime>("PublishDateTime");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Ocurrences");
                });

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("BlockApartment")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Warning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("ProfileId");

                    b.Property<DateTime>("PublishDateTime");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Warnings");
                });

            modelBuilder.Entity("CondominiumNetwork.Infrastructure.DataAcess.Context.Model.DbCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Answer", b =>
                {
                    b.HasOne("CondominiumNetwork.DomainModel.Entities.Ocurrence", "Ocurrence")
                        .WithMany("Answers")
                        .HasForeignKey("OcurrenceId");

                    b.HasOne("CondominiumNetwork.DomainModel.Entities.Profile", "Profile")
                        .WithMany("Answers")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Ocurrence", b =>
                {
                    b.HasOne("CondominiumNetwork.DomainModel.Entities.Profile", "Profile")
                        .WithMany("Ocurrences")
                        .HasForeignKey("ProfileId");
                });

            modelBuilder.Entity("CondominiumNetwork.DomainModel.Entities.Warning", b =>
                {
                    b.HasOne("CondominiumNetwork.DomainModel.Entities.Profile", "Profile")
                        .WithMany("Warnings")
                        .HasForeignKey("ProfileId");
                });
#pragma warning restore 612, 618
        }
    }
}
